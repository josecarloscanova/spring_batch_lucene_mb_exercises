<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:flow="http://www.springframework.org/schema/webflow-config"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
          http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi-1.2.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
 
	<!-- <import resource="classpath:spring-dao-context.xml" /> -->
	
	<!--<import resource="classpath:spring-label-name-context.xml" />
	<import resource="classpath:spring-batch-datasource.xml" />
	<import resource="classpath:spring-job-repo.xml" />
	<import resource="classpath:spring-key-service-factory.xml" />
	<import resource="classpath:spring-release-name-context.xml" />
	<import resource="classpath:spring-track-name-context.xml" />
	<import resource="classpath:spring-work-name-context.xml" /> -->
	
	<import resource="classpath:spring-batch-jobs/artist_alias/lucene/document-configuration-xml/document-configuration.xml" />
	
	<bean lazy-init="true" id="propertyPlaceholderConfigurer"  
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		  <property name="locations">  
		    <list>  
		      <value>classpath:spring-index-searchers/configuration.properties</value>  
		      <value>classpath:spring-index-searchers/index_locations.properties</value>
		    </list>  
		  </property>  
	</bean> 
	
	<bean lazy-init="true" id="defaultVersion" class="org.apache.lucene.util.Version" factory-method="valueOf">
		<constructor-arg value="LUCENE_46"/>
	</bean>

	
	<bean lazy-init="true" class="org.nanotek.lucene.search.local.IndexSearcherProvider">
	</bean>
	
	<bean lazy-init="true" id="indexType" 
		class="org.nanotek.cms.domain.lucene.config.IndexType" 
		factory-method="valueOf">
		<constructor-arg value="NMAPDIRECTORY"/>
	</bean>
	
	<bean id="defaultStore" class="org.nanotek.lucene.index.Store"> 
		<property name="storeLocation" value="${index.global.file.name.al}"></property>
	</bean>
	
	<util:set id="storeSet" value-type="org.nanotek.lucene.index.Store">
		<ref bean="defaultStore"/>
	</util:set>
	
	<bean id="index" lazy-init="true" class="org.nanotek.lucene.index.Index">
		<property name="indexStore" ref="storeSet">
		</property>
		<property name="indexType" ref="indexType"></property>
	</bean>
	
		
	<bean lazy-init="true" id="targetField" 
			class="org.nanotek.query.ContextKeys" 
			factory-method="valueOf">
		<constructor-arg value="TARGET_FIELD"/>
	</bean>
	
	<bean lazy-init="true" id="targetIndex" 
			class="org.nanotek.query.ContextKeys" 
			factory-method="valueOf">
		<constructor-arg value="CURRENT_INDEX"/>
	</bean>
	
	<bean id="stringBase" class="org.nanotek.StringBase">
		<constructor-arg value="name"></constructor-arg>
	</bean>
	
	<util:map 
		key-type="org.nanotek.query.ContextKeys" 
		value-type="org.nanotek.Base" id="contextMap">
		<entry key-ref="targetIndex" value-ref="index"></entry>
		<entry key-ref="targetField" value-ref="stringBase"></entry> 
	</util:map>
	
	<bean id="queryContext" class="org.nanotek.query.QueryContext" lazy-init="true">
		<constructor-arg><ref bean="contextMap"/></constructor-arg>
			<property name="maxHits" value="100"></property>
	</bean>
	
	<bean id="indexSearcherProvider" class="org.nanotek.lucene.search.local.IndexSearcherProvider" lazy-init="true">
	</bean>

	<bean id="searcherService" class="org.nanotek.lucene.search.local.LocalSearcherService" lazy-init="true">
	</bean>
	
	<bean id="baseQueryDispatcher" class="org.nanotek.lucene.query.BaseQueryDispatcher">
		<property name="indexSearcherProvider" ref="indexSearcherProvider"></property>
	</bean>
	
	<bean id="listenableDispatcher" class="org.nanotek.query.event.listener.ListenableDispatcher">
		<constructor-arg><ref bean="baseQueryDispatcher"/></constructor-arg>
		<constructor-arg><ref bean="baseListeners"/></constructor-arg>
	</bean>
	
	<bean id="queryProcessor" class="org.nanotek.lucene.query.LuceneQueryProcessor">
		<property name="queryDispatcher" ref="listenableDispatcher"></property>
	</bean>
	
	<bean id="resultListener" class="tests.search.QueryListenerProcessor"></bean>
	
	<util:list id="baseListeners" value-type="tests.search.QueryListenerProcessor">
		<ref bean="resultListener"/>
	</util:list>
	
</beans>