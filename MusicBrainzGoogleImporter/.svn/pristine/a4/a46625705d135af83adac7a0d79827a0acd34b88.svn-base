<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="MusicBrainzGoogleImporter">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../Java/eclipse-standard-luna-R-win32-x86_64/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/commons-beanutils/commons-beanutils/1.9.1/commons-beanutils-1.9.1.jar"/>
        <pathelement location="../../.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-context/3.2.9.RELEASE/spring-context-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-context-support/3.2.9.RELEASE/spring-context-support-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar"/>
        <pathelement location="../../.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar"/>
        <pathelement location="../../.m2/repository/org/apache/commons/commons-lang3/3.3/commons-lang3-3.3.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/batch/spring-batch-core/2.2.5.RELEASE/spring-batch-core-2.2.5.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/batch/spring-batch-infrastructure/2.2.5.RELEASE/spring-batch-infrastructure-2.2.5.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/retry/spring-retry/1.0.2.RELEASE/spring-retry-1.0.2.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/com/thoughtworks/xstream/xstream/1.3/xstream-1.3.jar"/>
        <pathelement location="../../.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar"/>
        <pathelement location="../../.m2/repository/junit/junit/4.9/junit-4.9.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar"/>
        <pathelement location="../../.m2/repository/org/apache/marmotta/ldpath-functions-collections/3.1.0-incubating/ldpath-functions-collections-3.1.0-incubating.jar"/>
        <pathelement location="../../.m2/repository/org/apache/marmotta/ldpath-core/3.1.0-incubating/ldpath-core-3.1.0-incubating.jar"/>
        <pathelement location="../../.m2/repository/org/apache/marmotta/ldpath-api/3.1.0-incubating/ldpath-api-3.1.0-incubating.jar"/>
        <pathelement location="../../.m2/repository/com/google/guava/guava/14.0.1/guava-14.0.1.jar"/>
        <pathelement location="../../.m2/repository/org/slf4j/slf4j-ext/1.7.5/slf4j-ext-1.7.5.jar"/>
        <pathelement location="../../.m2/repository/ch/qos/cal10n/cal10n-api/0.7.4/cal10n-api-0.7.4.jar"/>
        <pathelement location="../../.m2/repository/org/slf4j/jcl-over-slf4j/1.7.5/jcl-over-slf4j-1.7.5.jar"/>
        <pathelement location="../../.m2/repository/org/slf4j/jul-to-slf4j/1.7.5/jul-to-slf4j-1.7.5.jar"/>
        <pathelement location="../../.m2/repository/org/slf4j/log4j-over-slf4j/1.7.5/log4j-over-slf4j-1.7.5.jar"/>
        <pathelement location="../../.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar"/>
        <pathelement location="../../.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar"/>
        <pathelement location="../../.m2/repository/org/aspectj/aspectjrt/1.7.4/aspectjrt-1.7.4.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/amqp/spring-amqp/1.3.0.RELEASE/spring-amqp-1.3.0.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-core/3.2.9.RELEASE/spring-core-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-expression/3.2.9.RELEASE/spring-expression-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-beans/3.2.9.RELEASE/spring-beans-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-aop/3.2.9.RELEASE/spring-aop-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-tx/3.2.9.RELEASE/spring-tx-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-jdbc/3.2.9.RELEASE/spring-jdbc-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-orm/3.2.9.RELEASE/spring-orm-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-oxm/3.2.9.RELEASE/spring-oxm-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-web/3.2.9.RELEASE/spring-web-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-webmvc/3.2.9.RELEASE/spring-webmvc-3.2.9.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/org/aspectj/aspectjlib/1.6.2/aspectjlib-1.6.2.jar"/>
        <pathelement location="../../.m2/repository/org/aspectj/aspectjweaver/1.7.4/aspectjweaver-1.7.4.jar"/>
        <pathelement location="../../.m2/repository/org/hibernate/hibernate-core/3.6.10.Final/hibernate-core-3.6.10.Final.jar"/>
        <pathelement location="../../.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar"/>
        <pathelement location="../../.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar"/>
        <pathelement location="../../.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar"/>
        <pathelement location="../../.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar"/>
        <pathelement location="../../.m2/repository/org/hibernate/hibernate-annotations/3.5.6-Final/hibernate-annotations-3.5.6-Final.jar"/>
        <pathelement location="../../.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar"/>
        <pathelement location="../../.m2/repository/org/hibernate/hibernate-validator/4.3.1.Final/hibernate-validator-4.3.1.Final.jar"/>
        <pathelement location="../../.m2/repository/org/jboss/logging/jboss-logging/3.1.0.CR2/jboss-logging-3.1.0.CR2.jar"/>
        <pathelement location="../../.m2/repository/javax/xml/bind/jaxb-api/2.2/jaxb-api-2.2.jar"/>
        <pathelement location="../../.m2/repository/com/sun/xml/bind/jaxb-impl/2.1.12/jaxb-impl-2.1.12.jar"/>
        <pathelement location="../../.m2/repository/javassist/javassist/3.12.0.SP1/javassist-3.12.0.SP1.jar"/>
        <pathelement location="../../.m2/repository/cglib/cglib/2.2/cglib-2.2.jar"/>
        <pathelement location="../../.m2/repository/asm/asm/3.1/asm-3.1.jar"/>
        <pathelement location="../../.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar"/>
        <pathelement location="../../.m2/repository/net/sourceforge/collections/collections-generic/4.01/collections-generic-4.01.jar"/>
        <pathelement location="../../.m2/repository/net/sf/ehcache/ehcache-core/2.6.9/ehcache-core-2.6.9.jar"/>
        <pathelement location="../../.m2/repository/javax/jms/jms-api/1.1-rev-1/jms-api-1.1-rev-1.jar"/>
        <pathelement location="../../.m2/repository/org/springframework/spring-jms/3.2.7.RELEASE/spring-jms-3.2.7.RELEASE.jar"/>
        <pathelement location="../../.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar"/>
        <pathelement location="../../.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar"/>
        <pathelement location="../../.m2/repository/org/apache/commons/commons-collections4/4.0/commons-collections4-4.0.jar"/>
        <pathelement location="../../.m2/repository/org/apache/tika/tika-app/1.5/tika-app-1.5.jar"/>
        <pathelement location="../../.m2/repository/org/apache/tika/tika-parsers/1.5/tika-parsers-1.5.jar"/>
        <pathelement location="../../.m2/repository/org/apache/tika/tika-core/1.5/tika-core-1.5.jar"/>
        <pathelement location="../../.m2/repository/org/gagravarr/vorbis-java-tika/0.1/vorbis-java-tika-0.1.jar"/>
        <pathelement location="../../.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1-tests.jar"/>
        <pathelement location="../../.m2/repository/edu/ucar/netcdf/4.2-min/netcdf-4.2-min.jar"/>
        <pathelement location="../../.m2/repository/org/apache/james/apache-mime4j-core/0.7.2/apache-mime4j-core-0.7.2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/james/apache-mime4j-dom/0.7.2/apache-mime4j-dom-0.7.2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar"/>
        <pathelement location="../../.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar"/>
        <pathelement location="../../.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar"/>
        <pathelement location="../../.m2/repository/org/apache/pdfbox/pdfbox/1.8.4/pdfbox-1.8.4.jar"/>
        <pathelement location="../../.m2/repository/org/apache/pdfbox/fontbox/1.8.4/fontbox-1.8.4.jar"/>
        <pathelement location="../../.m2/repository/org/apache/pdfbox/jempbox/1.8.4/jempbox-1.8.4.jar"/>
        <pathelement location="../../.m2/repository/org/bouncycastle/bcmail-jdk15/1.45/bcmail-jdk15-1.45.jar"/>
        <pathelement location="../../.m2/repository/org/bouncycastle/bcprov-jdk15/1.45/bcprov-jdk15-1.45.jar"/>
        <pathelement location="../../.m2/repository/org/apache/poi/poi/3.10-beta2/poi-3.10-beta2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/poi/poi-scratchpad/3.10-beta2/poi-scratchpad-3.10-beta2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/poi/poi-ooxml/3.10-beta2/poi-ooxml-3.10-beta2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/poi/poi-ooxml-schemas/3.10-beta2/poi-ooxml-schemas-3.10-beta2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0.1/geronimo-stax-api_1.0_spec-1.0.1.jar"/>
        <pathelement location="../../.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar"/>
        <pathelement location="../../.m2/repository/org/ow2/asm/asm-debug-all/4.1/asm-debug-all-4.1.jar"/>
        <pathelement location="../../.m2/repository/com/googlecode/mp4parser/isoparser/1.0-RC-1/isoparser-1.0-RC-1.jar"/>
        <pathelement location="../../.m2/repository/com/drewnoakes/metadata-extractor/2.6.2/metadata-extractor-2.6.2.jar"/>
        <pathelement location="../../.m2/repository/xerces/xercesImpl/2.8.1/xercesImpl-2.8.1.jar"/>
        <pathelement location="../../.m2/repository/xml-apis/xml-apis/1.3.03/xml-apis-1.3.03.jar"/>
        <pathelement location="../../.m2/repository/de/l3s/boilerpipe/boilerpipe/1.1.0/boilerpipe-1.1.0.jar"/>
        <pathelement location="../../.m2/repository/rome/rome/0.9/rome-0.9.jar"/>
        <pathelement location="../../.m2/repository/jdom/jdom/1.0/jdom-1.0.jar"/>
        <pathelement location="../../.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1.jar"/>
        <pathelement location="../../.m2/repository/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar"/>
        <pathelement location="../../.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar"/>
        <pathelement location="../../.m2/repository/com/adobe/xmp/xmpcore/5.1.2/xmpcore-5.1.2.jar"/>
        <pathelement location="../../.m2/repository/com/google/code/gson/gson/1.7.1/gson-1.7.1.jar"/>
        <pathelement location="../../.m2/repository/org/postgresql/postgresql/9.3-1101-jdbc4/postgresql-9.3-1101-jdbc4.jar"/>
        <pathelement location="../../.m2/repository/org/javassist/javassist/3.16.1-GA/javassist-3.16.1-GA.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar"/>
        <pathelement location="../../.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.0.6/jackson-databind-2.0.6.jar"/>
        <pathelement location="../../.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.0.6/jackson-annotations-2.0.6.jar"/>
        <pathelement location="../../.m2/repository/com/fasterxml/jackson/core/jackson-core/2.0.6/jackson-core-2.0.6.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar"/>
    </path>
    <path id="MusicBrainzGoogleImporter.classpath">
        <pathelement location="target/classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.ArtistNameBootLoader.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderArtistCreditName.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderBaseMapStrategyTest (2).classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderBaseMapStrategyTest (3).classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderDataBaseMapStrategyTest (1).classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderDataBaseMapStrategyTest.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DaoArtistName.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DataBaseTest.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DynaBeanBuilder.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.FileListReader.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.FileLocationTest.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.HibernateUtil.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderArtistName.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderArtistCredit.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.MappedFile.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.CsvLoaderRecording.classpath">
        <path refid="MusicBrainzGoogleImporter.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="spring-xml">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="spring-xml"/>
            <src path="src/test/java"/>
            <classpath refid="MusicBrainzGoogleImporter.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ArtistNameBootLoader">
        <java classname="org.nanotek.musicbrainz.job.lucene.ArtistNameBootLoader" failonerror="true" fork="yes">
            <classpath refid="run.ArtistNameBootLoader.classpath"/>
        </java>
    </target>
    <target name="CsvLoaderArtistCreditName">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderArtistCreditName" todir="${junit.output.dir}"/>
            <classpath refid="run.CsvLoaderArtistCreditName.classpath"/>
        </junit>
    </target>
    <target name="CsvLoaderBaseMapStrategyTest (2)">
        <java classname="tests.org.nanotek.musicbrainz.data.load.csv.CsvLoaderBaseMapStrategyTest" failonerror="true" fork="yes">
            <classpath refid="run.CsvLoaderBaseMapStrategyTest (2).classpath"/>
        </java>
    </target>
    <target name="CsvLoaderBaseMapStrategyTest (3)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.csv.spring.CsvLoaderBaseMapStrategyTest" todir="${junit.output.dir}"/>
            <classpath refid="run.CsvLoaderBaseMapStrategyTest (3).classpath"/>
        </junit>
    </target>
    <target name="CsvLoaderDataBaseMapStrategyTest (1)">
        <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.CsvLoaderDataBaseMapStrategyTest" failonerror="true" fork="yes">
            <classpath refid="run.CsvLoaderDataBaseMapStrategyTest (1).classpath"/>
        </java>
    </target>
    <target name="CsvLoaderDataBaseMapStrategyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.csv.spring.CsvLoaderDataBaseMapStrategyTest" todir="${junit.output.dir}"/>
            <classpath refid="run.CsvLoaderDataBaseMapStrategyTest.classpath"/>
        </junit>
    </target>
    <target name="DaoArtistName">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.dao.spring.DaoArtistName" todir="${junit.output.dir}"/>
            <classpath refid="run.DaoArtistName.classpath"/>
        </junit>
    </target>
    <target name="DataBaseTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.DataBaseTest" todir="${junit.output.dir}"/>
            <classpath refid="run.DataBaseTest.classpath"/>
        </junit>
    </target>
    <target name="DynaBeanBuilder">
        <java classname="org.nanotek.apache.beans.DynaBeanBuilder" failonerror="true" fork="yes">
            <classpath refid="run.DynaBeanBuilder.classpath"/>
        </java>
    </target>
    <target name="FileListReader">
        <java classname="org.nanotek.util.generator.FileListReader" failonerror="true" fork="yes">
            <classpath refid="run.FileListReader.classpath"/>
        </java>
    </target>
    <target name="FileLocationTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.FileLocationTest" todir="${junit.output.dir}"/>
            <classpath refid="run.FileLocationTest.classpath"/>
        </junit>
    </target>
    <target name="HibernateUtil">
        <java classname="org.nanotek.util.HibernateUtil" failonerror="true" fork="yes">
            <classpath refid="run.HibernateUtil.classpath"/>
        </java>
    </target>
    <target name="CsvLoaderArtistName">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderArtistName" todir="${junit.output.dir}"/>
            <classpath refid="run.CsvLoaderArtistName.classpath"/>
        </junit>
    </target>
    <target name="CsvLoaderArtistCredit">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderArtistCredit" todir="${junit.output.dir}"/>
            <classpath refid="run.CsvLoaderArtistCredit.classpath"/>
        </junit>
    </target>
    <target name="MappedFile">
        <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.MappedFile" failonerror="true" fork="yes">
            <classpath refid="run.MappedFile.classpath"/>
        </java>
    </target>
    <target name="CsvLoaderRecording" >
        <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderRecording" failonerror="true" fork="yes">
            <jvmarg line="-Xms2G -Xmx4G"/>
            <classpath refid="run.CsvLoaderRecording.classpath"/>
        </java>
    </target>
    <target name="CsvLoaderRelease" >
         <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderRelease" failonerror="true" fork="yes">
            <jvmarg line="-Xms2G -Xmx4G"/>
          	<classpath refid="run.CsvLoaderRecording.classpath"/>
         </java>
    </target>
	<target name="CsvLoaderReleaseGroup" >
			<java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderReleaseGroup" failonerror="true" fork="yes">
            	<jvmarg line="-Xms2G -Xmx4G"/>
        	<classpath refid="run.CsvLoaderRecording.classpath"/>
    	</java>
	</target>              	
    <target name="CsvLoaderMedium" >
            <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderMedium" failonerror="true" fork="yes">
            	<jvmarg line="-Xms2G -Xmx4G"/>
                <classpath refid="run.CsvLoaderRecording.classpath"/>
            </java>
    </target>
    <target name="CsvLoaderMediumCdToc" >
             <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderMediumCdToc" failonerror="true" fork="yes">
                 <jvmarg line="-Xms2G -Xmx4G"/>
             <classpath refid="run.CsvLoaderRecording.classpath"/>
         </java>
    </target>
    <target name="CsvLoaderCdToc" >
             <java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderCdToc" failonerror="true" fork="yes">
                  <jvmarg line="-Xms2G -Xmx4G"/>
             <classpath refid="run.CsvLoaderRecording.classpath"/>
        </java>
    </target>              	
    <target name="CsvLoaderTrack" >
		<java classname="tests.org.nanotek.musicbrainz.data.load.csv.spring.musicbrainz.CsvLoaderTrack" failonerror="true" fork="yes">
        		<jvmarg line="-Xms2G -Xmx4G"/>
		<classpath refid="run.CsvLoaderRecording.classpath"/>
    	</java>
    </target>              	
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
