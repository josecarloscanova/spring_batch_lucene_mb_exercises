package org.nanotek.beans.batch;

import org.nanotek.Base;
/*
 * CREATE TABLE batch_job_execution_context
(
  job_execution_id bigint NOT NULL,
  short_context character varying(2500) NOT NULL,
  serialized_context text,
  CONSTRAINT batch_job_execution_context_pkey PRIMARY KEY (job_execution_id ),
  CONSTRAINT job_exec_ctx_fk FOREIGN KEY (job_execution_id)
      REFERENCES batch_job_execution (job_execution_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
 */
@SuppressWarnings("serial")
public class JobExecutionContext implements Base<Long> {

	private Long id; 
	private String shortContextCharacter; 
	private String serializedContext;
	private String shortContext;
	
	public Long getId() {
		return id;
	}
	
	public void setId(Long id) {
		this.id = id;
	}
	
	public String getShortContextCharacter() {
		return shortContextCharacter;
	}
	
	public void setShortContextCharacter(String shortContextCharacter) {
		this.shortContextCharacter = shortContextCharacter;
	}
	
	public String getSerializedContext() {
		return serializedContext;
	}
	
	public void setSerializedContext(String serializedContext) {
		this.serializedContext = serializedContext;
	}

	public String getShortContext() {
		return shortContext;
	}

	public void setShortContext(String shortContext) {
		this.shortContext = shortContext;
	} 
	
}
